#include <ctype.h>
#include <stdio.h>
#include <string.h>

#define MAX_FRASE 100

// Função para verificar se um caractere é uma vogal
int isVowel(char ch) {
  ch = tolower(ch); // Convertendo para minúsculo para facilitar a verificação
  return (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u');
}

char *vogais_consoantes() {
  char frase[MAX_FRASE];
  int i, contV = 0, contC = 0, contS = 0;
  char p, u;
  char caractere[2];
  static char PU[3];
  static char retorno[5];

  printf("Informe uma string, podendo ser uma palavra ou frase: ");
  fgets(frase, MAX_FRASE, stdin);
  frase[strcspn(frase, "\n")] = '\0';

  int tam = strlen(frase);
  char frase_processada[tam];
  int index = 0;
  for (i = 0; i < tam; i++) {
    if (isalpha(frase[i])) {
      frase_processada[index++] = tolower(frase[i]);
      // Separando vogais e consoantes
      if (isVowel(frase[i])) {
        contV++;
      } else {
        contC++;
      }
      contS++;
    }
  }

  retorno[0] = contS + '0';
  retorno[1] = contV + '0';
  retorno[2] = contC + '0';

  frase_processada[index] = '\0';

  // pegar o primeiro e ultimo caracter e transformar em maiusculo
  p = toupper(frase_processada[0]);
  if (index > 0) {
    u = toupper(frase_processada[index - 1]);
  }

  sprintf(PU, "%c%c", p, u);
  //printf("Resultado: %s\n", PU);
  
  retorno[3] = PU[0];
  retorno[4] = PU[1];
  return retorno;
}

int main() {
  char *valor = vogais_consoantes();
  printf("Quantidade de letras na String: %c \n", valor[0]);
  printf("Quantidade de Vogais: %c \n", valor[1]);
  printf("Quantidade de Consoantes: %c \n", valor[2]);
  printf("Primeiro e Ultimo caracteres concatenados, e em maiúsculo: %c%c \n", valor[3],valor[4]);
  return 0;
}
